<?php
session_start();
if (!isset($_SESSION['user_id']) || $_SESSION['user_type'] !== 'admin') {
    header("Location: /kindact/main/login_admin.html");
    exit();
}

include 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $ong_id = $_POST['ong_id'] ?? '';

    if (empty($ong_id)) {
        die("ID da ONG não fornecido.");
    }

    $stmt = $conn->prepare("UPDATE tb_ong SET aprovado = 1 WHERE ong_id = ?");
    $stmt->bind_param("i", $ong_id);

    if ($stmt->execute()) {
        header("Location: /kindact/main/aprovacao_admin.php");
        exit();
    } else {
        echo "Erro ao aprovar ONG.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

include 'db_connect.php';

if (!$conn) {
    die("Erro: Conexão com o banco de dados não estabelecida.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($email) || empty($senha)) {
        header("Location: /kindact/main/cadastro_admin.html?message=Email%20e%20senha%20são%20obrigatórios.");
        exit();
    }

    try {
        // Testar se a tabela existe
        $result = $conn->query("SHOW TABLES LIKE 'tb_admin'");
        if ($result->num_rows == 0) {
            throw new Exception("Tabela 'tb_admin' não existe no banco de dados.");
        }

        // Verificar se o email já existe
        $stmt = $conn->prepare("SELECT admin_id FROM tb_admin WHERE admin_email = ?");
        if (!$stmt) {
            throw new Exception("Erro ao preparar a consulta de verificação: " . $conn->error);
        }

        $stmt->bind_param("s", $email);
        if (!$stmt->execute()) {
            throw new Exception("Erro ao executar a consulta de verificação: " . $stmt->error);
        }

        $result = $stmt->get_result();
        if (!$result) {
            throw new Exception("Erro ao obter o resultado: " . $conn->error);
        }

        if ($result->num_rows > 0) {
            $stmt->close();
            $stmt = null;
            header("Location: /kindact/main/cadastro_admin.html?message=Email%20já%20cadastrado.");
            exit();
        }       
        $stmt->close();

        // Hash da senha
        $senha_hash = password_hash($senha, PASSWORD_DEFAULT);
        if (!$senha_hash) {
            throw new Exception("Erro ao gerar o hash da senha.");
        }

        // Inserir o novo administrador (usando 'senha')
        $stmt = $conn->prepare("INSERT INTO tb_admin (admin_email, admin_senha) VALUES (?, ?)");
        if (!$stmt) {
            throw new Exception("Erro ao preparar a consulta de inserção: " . $conn->error);
        }

        $stmt->bind_param("ss", $email, $senha_hash);
        if (!$stmt->execute()) {
            throw new Exception("Erro ao executar a inserção: " . $stmt->error);
        }

        $stmt->close();
        header("Location: /kindact/main/login_admin.html?message=Administrador%20cadastrado%20com%20sucesso!");
        exit();
    } catch (Exception $e) {
        if (isset($stmt) && $stmt instanceof mysqli_stmt) {
            $stmt->close();
        }   
        die("Erro: " . $e->getMessage());
    }
} else {
    header("Location: /kindact/main/cadastro_admin.html?message=Método%20não%20permitido.%20Use%20POST.");
    exit();
}

$conn->close();
?>



<?php
include 'db_connect.php';
error_reporting(E_ALL);
ini_set('display_errors', 1);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $nome = $_POST['nome'] ?? '';
    $cnpj = $_POST['cnpj'] ?? '';
    $telefone = $_POST['telefone'] ?? '';
    $email = $_POST['email'] ?? '';
    $cep = $_POST['cep'] ?? '';
    $endereco = $_POST['endereco'] ?? '';
    $area_atuacao = $_POST['area_atuacao'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($nome) || empty($cnpj) || empty($telefone) || empty($email) || empty($cep) || empty($endereco) || empty($senha)) {
        die("Todos os campos obrigatórios devem ser preenchidos.");
    }

    $senha_hash = password_hash($senha, PASSWORD_DEFAULT);

    $stmt = $conn->prepare("INSERT INTO tb_ong 
    (ong_nome, ong_cnpj, ong_telefone, ong_email, ong_cep, ong_endereco, ong_area_atuacao, ong_senha) 
    VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("ssssssss", $nome, $cnpj, $telefone, $email, $cep, $endereco, $area_atuacao, $senha_hash);


    $stmt->bind_param("ssssssss", $nome, $cnpj, $telefone, $email, $cep, $endereco, $area_atuacao, $senha_hash);

    if ($stmt->execute()) {
        echo "ONG cadastrada com sucesso! Aguardando aprovação.";
        header("Location: /kindact/main/login_ong.html");
        exit();
    } else {
        echo "Erro ao cadastrar ONG.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
include 'db_connect.php';
error_reporting(E_ALL);
ini_set('display_errors', 1);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $nome = $_POST['nome'] ?? '';
    $telefone = $_POST['telefone'] ?? '';
    $email = $_POST['email'] ?? '';
    $cep = $_POST['cep'] ?? '';
    $endereco = $_POST['endereco'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($nome) || empty($telefone) || empty($email) || empty($cep) || empty($endereco) || empty($senha)) {
        die("Todos os campos obrigatórios devem ser preenchidos.");
    }

    $senha_hash = password_hash($senha, PASSWORD_DEFAULT);

    $stmt = $conn->prepare("INSERT INTO tb_voluntario (voluntario_nome, voluntario_telefone, voluntario_email, voluntario_cep, voluntario_endereco, voluntario_senha) VALUES (?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("ssssss", $nome, $telefone, $email, $cep, $endereco, $senha_hash);

    if ($stmt->execute()) {
        echo "Voluntário cadastrado com sucesso!";
        header("Location: /kindact/main/login_voluntario.html");
        exit();
    } else {
        echo "Erro ao cadastrar voluntário.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "kindact";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>



<?php
session_start();
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

if (!isset($_SESSION['user_id']) || $_SESSION['user_type'] !== 'voluntario') {
    header("Location: /kindact/main/login_voluntario.html");
    exit();
}

include 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $voluntario_id = $_SESSION['user_id'];
    $ong_id = $_POST['ong_id'] ?? '';

    if (empty($ong_id)) {
        die("ID da ONG não fornecido.");
    }

    $stmt = $conn->prepare("INSERT INTO tb_candidatura (fk_voluntario_id, fk_ong_id, status) VALUES (?, ?, 'pendente')");
    $stmt->bind_param("ii", $voluntario_id, $ong_id);

    if ($stmt->execute()) {
        echo "Candidatura enviada com sucesso!";
        header("Location: /kindact/main/usuario.html");
        exit();
    } else {
        echo "Erro ao enviar candidatura.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
include 'db_connect.php';

$sql = "SELECT ong_id, ong_nome, ong_area_atuacao FROM tb_ong WHERE aprovado = 1";
$result = $conn->query($sql);

$ongs = [];
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $ongs[] = $row;
    }
}

header('Content-Type: application/json');
echo json_encode($ongs);

$conn->close();
?>


<?php
include 'db_connect.php';

$sql = "SELECT voluntario_id, voluntario_nome, voluntario_email FROM tb_voluntario";
$result = $conn->query($sql);

$voluntarios = [];
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $voluntarios[] = $row;
    }
}

header('Content-Type: application/json');
echo json_encode($voluntarios);

$conn->close();
?>




<?php
session_start();
include 'db_connect.php';

if ($conn->connect_error) {
    header("Location: /kindact/main/login_admin.html?message=Erro%20de%20conexão%20com%20o%20banco%20de%20dados.");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($email) || empty($senha)) {
        header("Location: /kindact/main/login_admin.html?message=Email%20e%20senha%20são%20obrigatórios.");
        exit();
    }

    try {
        $stmt = $conn->prepare("SELECT admin_id, admin_senha FROM tb_admin WHERE admin_email = ?");
        if (!$stmt) {
            throw new Exception("Erro ao preparar a consulta.");
        }

        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $admin = $result->fetch_assoc();
            if (password_verify($senha, $admin['admin_senha'])) {
                $_SESSION['user_id'] = $admin['admin_id'];
                $_SESSION['user_type'] = 'admin';
                header("Location: /kindact/main/admin_tela.html");
                exit();
            } else {
                header("Location: /kindact/main/login_admin.html?message=Senha%20incorreta.");
                exit();
            }
        } else {
            header("Location: /kindact/main/login_admin.html?message=Email%20não%20encontrado.");
            exit();
        }

        $stmt->close();
    } catch (Exception $e) {
        header("Location: /kindact/main/login_admin.html?message=Erro%20ao%20processar%20o%20login:%20" . urlencode($e->getMessage()));
        exit();
    }
} else {
    header("Location: /kindact/main/login_admin.html?message=Método%20não%20permitido.%20Use%20POST.");
    exit();
}
$conn->close();
?>


<?php
session_start();
include 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($email) || empty($senha)) {
        die("Email e senha são obrigatórios.");
    }

    $stmt = $conn->prepare("SELECT ong_id, ong_senha, aprovado FROM tb_ong WHERE ong_email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $ong = $result->fetch_assoc();
        if ($ong['aprovado'] == 0) {
            die("Sua ONG ainda não foi aprovada pelo administrador.");
        }
        if (password_verify($senha, $ong['ong_senha'])) {
            $_SESSION['user_id'] = $ong['ong_id'];
            $_SESSION['user_type'] = 'ong';
            header("Location: /kindact/main/publicacao_ong.php");
            exit();
        } else {
            echo "Senha incorreta.";
        }
    } else {
        echo "Email não encontrado.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>


<?php
session_start();
include 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'] ?? '';
    $senha = $_POST['password'] ?? '';

    if (empty($email) || empty($senha)) {
        die("Email e senha são obrigatórios.");
    }

    $stmt = $conn->prepare("SELECT voluntario_id, voluntario_senha FROM tb_voluntario WHERE voluntario_email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $voluntario = $result->fetch_assoc();
        if (password_verify($senha, $voluntario['voluntario_senha'])) {
            $_SESSION['user_id'] = $voluntario['voluntario_id'];
            $_SESSION['user_type'] = 'voluntario';
            header("Location: /kindact/main/usuario.html");
            exit();
        } else {
            echo "Senha incorreta.";
        }
    } else {
        echo "Email não encontrado.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
session_start();
session_destroy();
header("Location: /kindact/main/index.html");
exit();
?>



<?php
session_start();
if (!isset($_SESSION['user_id']) || $_SESSION['user_type'] !== 'admin') {
    header("Location: /kindact/main/login_admin.html");
    exit();
}

include 'db_connect.php';

$ong_id = $_GET['ong_id'] ?? '';

if (empty($ong_id)) {
    die("ID da ONG não fornecido.");
}

$stmt = $conn->prepare("DELETE FROM tb_ong WHERE ong_id = ?");
$stmt->bind_param("i", $ong_id);

if ($stmt->execute()) {
    header("Location: /kindact/main/aprovacao_admin.php");
    exit();
} else {
    echo "Erro ao remover ONG.";
}

$stmt->close();
$conn->close();
?>


<?php
session_start();
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

if (!isset($_SESSION['user_id']) || $_SESSION['user_type'] !== 'ong') {
    header("Location: /kindact/main/login_ong.html");
    exit();
}

include 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $voluntario_id = $_POST['voluntario_id'] ?? '';
    $ong_id = $_SESSION['user_id'];

    if (empty($voluntario_id)) {
        die("ID do voluntário não fornecido.");
    }

    $stmt = $conn->prepare("UPDATE tb_candidatura SET status = 'contactado' WHERE fk_voluntario_id = ? AND fk_ong_id = ?");
    $stmt->bind_param("ii", $voluntario_id, $ong_id);

    if ($stmt->execute()) {
        header("Location: /kindact/main/contato_confirmado.html");
        exit();
    } else {
        echo "Erro ao processar contato.";
    }

    $stmt->close();
} else {
    http_response_code(405);
    echo "Método não permitido. Use POST.";
}
$conn->close();
?>



<?php
session_start();
if (!isset($_SESSION['user_id']) || $_SESSION['user_type'] !== 'admin') {
    header("Location: /kindact/main/login_admin.html");
    exit();
}

include 'db_connect.php';

$voluntario_id = $_GET['voluntario_id'] ?? '';

if (empty($voluntario_id)) {
    die("ID do voluntário não fornecido.");
}

$stmt = $conn->prepare("DELETE FROM tb_voluntario WHERE voluntario_id = ?");
$stmt->bind_param("i", $voluntario_id);

if ($stmt->execute()) {
    header("Location: /kindact/main/aprovacao_admin.php");
    exit();
} else {
    echo "Erro ao remover voluntário.";
}

$stmt->close();
$conn->close();
?>


